<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>King泉成长之路</title>
  
  <subtitle>“道阻且长，行则将至”</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-10T14:55:19.851Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jin Quan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>goPath与工作空间学习笔记</title>
    <link href="http://yoursite.com/2020/05/10/goPath%E4%B8%8E%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/05/10/goPath%E4%B8%8E%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-05-10T07:39:07.521Z</published>
    <updated>2020-05-10T14:55:19.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、gopath设置"><a href="#1、gopath设置" class="headerlink" title="1、gopath设置"></a>1、gopath设置</h1><p>前面我们在安装Go的时候看到需要设置GOPATH变量，Go从1.1版本到1.7必须设置这个变量，而且不能和Go的安装目录一样，这个目录用来存放Go源码，Go的可运行文件，以及相应的编译之后的包文件。所以这个目录下面有三个子目录：src、bin、pkg</p><p>从go 1.8开始，GOPATH环境变量现在有一个默认值，如果它没有被设置。 它在Unix上默认为$HOME/go,在Windows上默认为%USERPROFILE%/go。</p><p> GOPATH允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候Windows是分号，Linux系统是冒号，当有多个GOPATH时，默认会将go get的内容放在第一个目录下。 </p><p>%GOPATH%目录约定有三分子目录：</p><p>1、src存放源代码（比如：.go .c .h .s等）</p><p>2、pkg编译后生成的文件（比如：.a）</p><p>3、bin编译后生成的可执行文件（可将此目录加入到%path%环境变量中）</p><h1 id="2、代码目录结构规划"><a href="#2、代码目录结构规划" class="headerlink" title="2、代码目录结构规划"></a>2、代码目录结构规划</h1><p>GOPATH下的src目录就是接下来开发程序的主要目录，所有的源码都是放在这个目录下面，一般做法就是一个目录一个项目，%GOPATH%/src/mymath表示mymath这个应用包或者可执行应用，这个根据package是main还是其他来决定，main的话就是可执行应用，其他的话就是应用包。</p><p>所以当新建应用或者一个代码包时都是在stc目录下新建一个文件夹，文件夹名称一般是代码包名称，当然也允许多级目录， 例如在src下面新建了目录$GOPATH/src/github.com/astaxie/beedb 那么这个包路径就是”github.com/astaxie/beedb”，包名称是最后一个目录beedb </p><p>以mymath为例讲述如何编写应用包，执行如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd %GOPATH%&#x2F;src</span><br><span class="line">mkdir mymath</span><br></pre></td></tr></table></figure><p>新建文件sqrt.go，内容如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $GOPATH/src/mymath/sqrt.go源码如下：</span></span><br><span class="line"><span class="keyword">package</span> mymath</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">    z := <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++ &#123;</span><br><span class="line">        z -= (z*z - x) / (<span class="number">2</span> * x)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> z</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 这样我的应用包目录和代码已经新建完毕，注意：一般建议package的名称和目录名保持一致 </p><h1 id="3、编译应用"><a href="#3、编译应用" class="headerlink" title="3、编译应用"></a>3、编译应用</h1><p> 建立了自己的应用包后，如何进行编译安装呢？有两种方式安装。</p><p>1、只要进入对应的应用包目录，然后执行go install。</p><p>2、在任意的目录执行如下代码   go install mymath</p><p>安装完之后，进入C:\Go\pkg\windows_amd64目录下，可以看到mymath.a文件。</p><p>这个.a文件是应用包，那如何进行调用呢？</p><p>新建一个应用程序来调用这个应用包。</p><p>新建应用包mathapp，在其目录下新建main.go源码。</p><p>在windows命令行下得用type nul&gt;文件名.后缀名来创建： </p><p> D:\test_shandiao&gt; type nul&gt;test.go </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"mymath"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"Hello, world.  Sqrt(2) = %v\n"</span>, mymath.Sqrt(<span class="number">2</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这个package是main，import里面调用的包是mymath，这个就是相对于%GOPATH%/src的路径， 如果是多级目录，就在import里面引入多级目录，如果你有多个GOPATH，也是一样，Go会自动在多个<code>%GOPATH%/src</code>中寻找。 </p><p>如何编译程序呢？进入该应用目录，然后执行go build，那么在该目录下面会生成一个mathapp的可执行文件，mathapp.exe。</p><p>如何安装该应用，进入该目录执行go install，那么在%GOPATH%/bin/下增加了一个可执行文件mathapp，如果之前已经把%GOPATH%/bin加到path路径下了，则可以在命令行输入如下命令就可以执行 mathapp</p><h1 id="4、获取远程包"><a href="#4、获取远程包" class="headerlink" title="4、获取远程包"></a>4、获取远程包</h1><p>go语言有一个获取远程包的工具就是go get，目前go get支持多数开源社区（例如：github、googlecode、bitbucket、Launchpad）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com&#x2F;astaxie&#x2F;beedb</span><br></pre></td></tr></table></figure><p>go get -u参数可以自动更新包，而且当go get的时候会自动获取该包依赖的其他第三方包</p><p>通过这个命令可以获取相应的源码，对应的开源平台采用不同的源码控制工具，例如github采用git、googlecode采用hg，所以要获取这些源码，必须先安装相应的源码控制工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$GOPATH</span><br><span class="line">  src</span><br><span class="line">   |--github.com</span><br><span class="line">          |-astaxie</span><br><span class="line">              |-beedb</span><br><span class="line">   pkg</span><br><span class="line">    |--相应平台</span><br><span class="line">         |-github.com</span><br><span class="line">               |--astaxie</span><br><span class="line">                    |beedb.a</span><br></pre></td></tr></table></figure><p>go get本质上可以理解为首先第一步是通过源码工具clone代码到src下面，然后执行go install</p><p>在代码中如何使用远程包，很简单的就是和使用本地包一样，只要在开头import相应的路径就可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import “github.com&#x2F;astaxie&#x2F;beedb”</span><br></pre></td></tr></table></figure><h1 id="5、程序的整体结构"><a href="#5、程序的整体结构" class="headerlink" title="5、程序的整体结构"></a>5、程序的整体结构</h1><p>通过上面建立的我本地的mygo的目录结构如下所示</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bin/</span><br><span class="line">mathapp</span><br><span class="line">pkg/</span><br><span class="line">平台名/ 如：darwin_amd64、linux_amd64、windows_amd64</span><br><span class="line">mymath.a</span><br><span class="line">github.com/</span><br><span class="line">astaxie/</span><br><span class="line">beedb.a</span><br><span class="line"></span><br><span class="line">src/</span><br><span class="line">mathapp/</span><br><span class="line">main.<span class="keyword">go</span></span><br><span class="line">mymath/</span><br><span class="line">sqrt.<span class="keyword">go</span></span><br><span class="line">github.com/</span><br><span class="line">astaxie/</span><br><span class="line">beedb/</span><br><span class="line">beedb.<span class="keyword">go</span></span><br><span class="line">util.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p>从上面的结构我们可以很清晰的看到，bin目录下面存的是编译之后可执行的文件，pkg下面存放的是应用包，src下面保存的是应用源代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1、gopath设置&quot;&gt;&lt;a href=&quot;#1、gopath设置&quot; class=&quot;headerlink&quot; title=&quot;1、gopath设置&quot;&gt;&lt;/a&gt;1、gopath设置&lt;/h1&gt;&lt;p&gt;前面我们在安装Go的时候看到需要设置GOPATH变量，Go从1.1版本到1.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>king泉的第一篇博客</title>
    <link href="http://yoursite.com/2020/05/07/king%E6%B3%89%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/05/07/king%E6%B3%89%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-05-07T15:55:27.000Z</published>
    <updated>2020-05-08T15:38:36.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、练下手，熟悉一下怎么发布，怎么修改样式。"><a href="#1、练下手，熟悉一下怎么发布，怎么修改样式。" class="headerlink" title="1、练下手，熟悉一下怎么发布，怎么修改样式。"></a>1、练下手，熟悉一下怎么发布，怎么修改样式。</h1><p> <a href="https://github.com/jinquan1248/jinquan1248.github.io/blob/master/4.jpg" target="_blank" rel="noopener">https://github.com/jinquan1248/jinquan1248.github.io/blob/master/4.jpg</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1、练下手，熟悉一下怎么发布，怎么修改样式。&quot;&gt;&lt;a href=&quot;#1、练下手，熟悉一下怎么发布，怎么修改样式。&quot; class=&quot;headerlink&quot; title=&quot;1、练下手，熟悉一下怎么发布，怎么修改样式。&quot;&gt;&lt;/a&gt;1、练下手，熟悉一下怎么发布，怎么修改样
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
