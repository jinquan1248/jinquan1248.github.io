{"meta":{"title":"King泉成长之路","subtitle":"“道阻且长，行则将至”","description":null,"author":"Jin Quan","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2020-05-08T15:13:19.000Z","updated":"2020-05-08T15:13:58.566Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-05-08T15:11:45.000Z","updated":"2020-05-08T15:12:46.535Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"image","date":"2020-05-08T15:45:33.000Z","updated":"2020-05-08T15:45:33.275Z","comments":true,"path":"image/index.html","permalink":"http://yoursite.com/image/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-08T15:23:56.000Z","updated":"2020-05-08T15:24:50.925Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"goPath与工作空间学习笔记","slug":"goPath与工作空间学习笔记","date":"2020-05-10T07:39:07.521Z","updated":"2020-05-10T14:55:19.851Z","comments":true,"path":"2020/05/10/goPath与工作空间学习笔记/","link":"","permalink":"http://yoursite.com/2020/05/10/goPath%E4%B8%8E%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"1、gopath设置前面我们在安装Go的时候看到需要设置GOPATH变量，Go从1.1版本到1.7必须设置这个变量，而且不能和Go的安装目录一样，这个目录用来存放Go源码，Go的可运行文件，以及相应的编译之后的包文件。所以这个目录下面有三个子目录：src、bin、pkg 从go 1.8开始，GOPATH环境变量现在有一个默认值，如果它没有被设置。 它在Unix上默认为$HOME/go,在Windows上默认为%USERPROFILE%/go。 GOPATH允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候Windows是分号，Linux系统是冒号，当有多个GOPATH时，默认会将go get的内容放在第一个目录下。 %GOPATH%目录约定有三分子目录： 1、src存放源代码（比如：.go .c .h .s等） 2、pkg编译后生成的文件（比如：.a） 3、bin编译后生成的可执行文件（可将此目录加入到%path%环境变量中） 2、代码目录结构规划GOPATH下的src目录就是接下来开发程序的主要目录，所有的源码都是放在这个目录下面，一般做法就是一个目录一个项目，%GOPATH%/src/mymath表示mymath这个应用包或者可执行应用，这个根据package是main还是其他来决定，main的话就是可执行应用，其他的话就是应用包。 所以当新建应用或者一个代码包时都是在stc目录下新建一个文件夹，文件夹名称一般是代码包名称，当然也允许多级目录， 例如在src下面新建了目录$GOPATH/src/github.com/astaxie/beedb 那么这个包路径就是”github.com/astaxie/beedb”，包名称是最后一个目录beedb 以mymath为例讲述如何编写应用包，执行如下代码 12cd %GOPATH%&#x2F;srcmkdir mymath 新建文件sqrt.go，内容如下 12345678910// $GOPATH/src/mymath/sqrt.go源码如下：package mymathfunc Sqrt(x float64) float64 &#123; z := 0.0 for i := 0; i &lt; 1000; i++ &#123; z -= (z*z - x) / (2 * x) &#125; return z&#125; 这样我的应用包目录和代码已经新建完毕，注意：一般建议package的名称和目录名保持一致 3、编译应用 建立了自己的应用包后，如何进行编译安装呢？有两种方式安装。 1、只要进入对应的应用包目录，然后执行go install。 2、在任意的目录执行如下代码 go install mymath 安装完之后，进入C:\\Go\\pkg\\windows_amd64目录下，可以看到mymath.a文件。 这个.a文件是应用包，那如何进行调用呢？ 新建一个应用程序来调用这个应用包。 新建应用包mathapp，在其目录下新建main.go源码。 在windows命令行下得用type nul&gt;文件名.后缀名来创建： D:\\test_shandiao&gt; type nul&gt;test.go 12345678910package mainimport ( \"mymath\" \"fmt\")func main() &#123; fmt.Printf(\"Hello, world. Sqrt(2) = %v\\n\", mymath.Sqrt(2))&#125; 可以看到这个package是main，import里面调用的包是mymath，这个就是相对于%GOPATH%/src的路径， 如果是多级目录，就在import里面引入多级目录，如果你有多个GOPATH，也是一样，Go会自动在多个%GOPATH%/src中寻找。 如何编译程序呢？进入该应用目录，然后执行go build，那么在该目录下面会生成一个mathapp的可执行文件，mathapp.exe。 如何安装该应用，进入该目录执行go install，那么在%GOPATH%/bin/下增加了一个可执行文件mathapp，如果之前已经把%GOPATH%/bin加到path路径下了，则可以在命令行输入如下命令就可以执行 mathapp 4、获取远程包go语言有一个获取远程包的工具就是go get，目前go get支持多数开源社区（例如：github、googlecode、bitbucket、Launchpad） 1go get github.com&#x2F;astaxie&#x2F;beedb go get -u参数可以自动更新包，而且当go get的时候会自动获取该包依赖的其他第三方包 通过这个命令可以获取相应的源码，对应的开源平台采用不同的源码控制工具，例如github采用git、googlecode采用hg，所以要获取这些源码，必须先安装相应的源码控制工具。 12345678910$GOPATH src |--github.com |-astaxie |-beedb pkg |--相应平台 |-github.com |--astaxie |beedb.a go get本质上可以理解为首先第一步是通过源码工具clone代码到src下面，然后执行go install 在代码中如何使用远程包，很简单的就是和使用本地包一样，只要在开头import相应的路径就可以 1import “github.com&#x2F;astaxie&#x2F;beedb” 5、程序的整体结构通过上面建立的我本地的mygo的目录结构如下所示 12345678910111213141516171819bin/ mathapppkg/ 平台名/ 如：darwin_amd64、linux_amd64、windows_amd64 mymath.a github.com/ astaxie/ beedb.asrc/ mathapp/ main.go mymath/ sqrt.go github.com/ astaxie/ beedb/ beedb.go util.go 从上面的结构我们可以很清晰的看到，bin目录下面存的是编译之后可执行的文件，pkg下面存放的是应用包，src下面保存的是应用源代码。","categories":[],"tags":[]},{"title":"king泉的第一篇博客","slug":"king泉的第一篇博客","date":"2020-05-07T15:55:27.000Z","updated":"2020-05-08T15:38:36.219Z","comments":true,"path":"2020/05/07/king泉的第一篇博客/","link":"","permalink":"http://yoursite.com/2020/05/07/king%E6%B3%89%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"1、练下手，熟悉一下怎么发布，怎么修改样式。 https://github.com/jinquan1248/jinquan1248.github.io/blob/master/4.jpg","categories":[],"tags":[]}],"categories":[],"tags":[]}